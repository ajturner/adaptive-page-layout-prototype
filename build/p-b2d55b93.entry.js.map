{"version":3,"names":["isTreeItem","element","matches","getEnabledSiblingItem","el","direction","directionProp","currentEl","enabledEl","disabled","treeCss","Tree","constructor","hostRef","this","lines","child","undefined","scale","selectionMode","selectedItems","componentWillRender","parent","_a","parentElement","closest","render","h","Host","toString","role","tabIndex","getRootTabIndex","onFocus","focusTarget","querySelector","focusElement","onFocusIn","event","focusedFromRootOrOutsideTree","relatedTarget","contains","removeAttribute","onFocusOut","willFocusOutsideTree","onClick","target","childItems","nodeListToArray","querySelectorAll","preventDefault","stopPropagation","updateAncestorTree","isNoneSelectionMode","shouldSelect","hasChildren","shouldModifyToCurrentSelection","detail","modifyCurrentSelection","shouldSelectChildren","shouldClearCurrentSelection","length","shouldExpandTarget","targetItems","push","forEach","treeItem","includes","selected","forceToggle","expanded","window","getSelection","removeAllRanges","filter","i","calciteTreeSelect","emit","keyDownHandler","root","tagName","key","next","nextElementSibling","focus","previous","previousElementSibling","parentItem","getRootNode","activeElement","item","ancestors","Array","from","childItemsWithNoChildren","childItemsWithChildren","futureSelected","indeterminate","updateItemState","unselected","directChildItems","ancestor","descendants","activeDescendants"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/tree/utils.js","./node_modules/@esri/calcite-components/dist/collection/components/tree/tree.css?tag=calcite-tree&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/tree/tree.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nfunction isTreeItem(element) {\n  return element?.matches(\"calcite-tree-item\");\n}\nexport function getEnabledSiblingItem(el, direction) {\n  const directionProp = direction === \"down\" ? \"nextElementSibling\" : \"previousElementSibling\";\n  let currentEl = el;\n  let enabledEl = null;\n  while (isTreeItem(currentEl)) {\n    if (!currentEl.disabled) {\n      enabledEl = currentEl;\n      break;\n    }\n    currentEl = currentEl[directionProp];\n  }\n  return enabledEl;\n}\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host {\n  display: block;\n}\n\n:host(:focus) {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h, Host } from \"@stencil/core\";\nimport { focusElement, getRootNode, nodeListToArray } from \"../../utils/dom\";\nimport { getEnabledSiblingItem } from \"./utils\";\n/**\n * @slot - A slot for `calcite-tree-item` elements.\n */\nexport class Tree {\n  constructor() {\n    this.lines = false;\n    this.child = undefined;\n    this.scale = \"m\";\n    this.selectionMode = \"single\";\n    this.selectedItems = [];\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  componentWillRender() {\n    const parent = this.el.parentElement?.closest(\"calcite-tree\");\n    this.lines = parent ? parent.lines : this.lines;\n    this.scale = parent ? parent.scale : this.scale;\n    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n    this.child = !!parent;\n  }\n  render() {\n    return (h(Host, { \"aria-multiselectable\": this.child\n        ? undefined\n        : (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\").toString(), role: !this.child ? \"tree\" : undefined, tabIndex: this.getRootTabIndex() }, h(\"slot\", null)));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n  onFocus() {\n    if (!this.child) {\n      const focusTarget = this.el.querySelector(\"calcite-tree-item[selected]:not([disabled])\") || this.el.querySelector(\"calcite-tree-item:not([disabled])\");\n      focusElement(focusTarget);\n    }\n  }\n  onFocusIn(event) {\n    const focusedFromRootOrOutsideTree = event.relatedTarget === this.el || !this.el.contains(event.relatedTarget);\n    if (focusedFromRootOrOutsideTree) {\n      // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)\n      this.el.removeAttribute(\"tabindex\");\n    }\n  }\n  onFocusOut(event) {\n    const willFocusOutsideTree = !this.el.contains(event.relatedTarget);\n    if (willFocusOutsideTree) {\n      this.el.tabIndex = this.getRootTabIndex();\n    }\n  }\n  onClick(event) {\n    const target = event.target;\n    const childItems = nodeListToArray(target.querySelectorAll(\"calcite-tree-item\"));\n    if (this.child) {\n      return;\n    }\n    if (!this.child) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    if (this.selectionMode === \"ancestors\" && !this.child) {\n      this.updateAncestorTree(event);\n      return;\n    }\n    const isNoneSelectionMode = this.selectionMode === \"none\";\n    const shouldSelect = this.selectionMode !== null &&\n      (!target.hasChildren ||\n        (target.hasChildren &&\n          (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\")));\n    const shouldModifyToCurrentSelection = !isNoneSelectionMode &&\n      event.detail.modifyCurrentSelection &&\n      (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n    const shouldSelectChildren = this.selectionMode === \"multichildren\" || this.selectionMode === \"children\";\n    const shouldClearCurrentSelection = !shouldModifyToCurrentSelection &&\n      (((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") &&\n        childItems.length <= 0) ||\n        this.selectionMode === \"children\" ||\n        this.selectionMode === \"multichildren\");\n    const shouldExpandTarget = this.selectionMode === \"children\" || this.selectionMode === \"multichildren\";\n    if (!this.child) {\n      const targetItems = [];\n      if (shouldSelect) {\n        targetItems.push(target);\n      }\n      if (shouldSelectChildren) {\n        childItems.forEach((treeItem) => {\n          targetItems.push(treeItem);\n        });\n      }\n      if (shouldClearCurrentSelection) {\n        const selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item[selected]\"));\n        selectedItems.forEach((treeItem) => {\n          if (!targetItems.includes(treeItem)) {\n            treeItem.selected = false;\n          }\n        });\n      }\n      if (shouldExpandTarget && !event.detail.forceToggle) {\n        target.expanded = true;\n      }\n      if (shouldModifyToCurrentSelection) {\n        window.getSelection().removeAllRanges();\n      }\n      if ((shouldModifyToCurrentSelection && target.selected) ||\n        (shouldSelectChildren && event.detail.forceToggle)) {\n        targetItems.forEach((treeItem) => {\n          if (!treeItem.disabled) {\n            treeItem.selected = false;\n          }\n        });\n      }\n      else if (!isNoneSelectionMode) {\n        targetItems.forEach((treeItem) => {\n          if (!treeItem.disabled) {\n            treeItem.selected = true;\n          }\n        });\n      }\n    }\n    this.selectedItems = isNoneSelectionMode\n      ? [target]\n      : nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    this.calciteTreeSelect.emit();\n    event.stopPropagation();\n  }\n  keyDownHandler(event) {\n    const root = this.el.closest(\"calcite-tree:not([child])\");\n    const target = event.target;\n    if (!(root === this.el && target.tagName === \"CALCITE-TREE-ITEM\" && this.el.contains(target))) {\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      const next = getEnabledSiblingItem(target.nextElementSibling, \"down\");\n      if (next) {\n        next.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n    if (event.key === \"ArrowUp\") {\n      const previous = getEnabledSiblingItem(target.previousElementSibling, \"up\");\n      if (previous) {\n        previous.focus();\n        event.preventDefault();\n      }\n    }\n    if (event.key === \"ArrowLeft\" && !target.disabled) {\n      // When focus is on an open node, closes the node.\n      if (target.hasChildren && target.expanded) {\n        target.expanded = false;\n        event.preventDefault();\n        return;\n      }\n      // When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\n      const parentItem = target.parentElement.closest(\"calcite-tree-item\");\n      if (parentItem && (!target.hasChildren || target.expanded === false)) {\n        parentItem.focus();\n        event.preventDefault();\n        return;\n      }\n      // When focus is on a root node that is also either an end node or a closed node, does nothing.\n      return;\n    }\n    if (event.key === \"ArrowRight\" && !target.disabled) {\n      if (target.hasChildren) {\n        if (target.expanded && getRootNode(this.el).activeElement === target) {\n          // When focus is on an open node, moves focus to the first child node.\n          getEnabledSiblingItem(target.querySelector(\"calcite-tree-item\"), \"down\")?.focus();\n          event.preventDefault();\n        }\n        else {\n          // When focus is on a closed node, opens the node; focus does not move.\n          target.expanded = true;\n          event.preventDefault();\n        }\n      }\n      return;\n    }\n  }\n  updateAncestorTree(event) {\n    const item = event.target;\n    if (item.disabled) {\n      return;\n    }\n    const ancestors = [];\n    let parent = item.parentElement.closest(\"calcite-tree-item\");\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.parentElement.closest(\"calcite-tree-item\");\n    }\n    const childItems = Array.from(item.querySelectorAll(\"calcite-tree-item:not([disabled])\"));\n    const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n    const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n    const futureSelected = item.hasChildren\n      ? !(item.selected || item.indeterminate)\n      : !item.selected;\n    childItemsWithNoChildren.forEach((el) => {\n      el.selected = futureSelected;\n      el.indeterminate = false;\n    });\n    function updateItemState(childItems, item) {\n      const selected = childItems.filter((child) => child.selected);\n      const unselected = childItems.filter((child) => !child.selected);\n      item.selected = selected.length === childItems.length;\n      item.indeterminate = selected.length > 0 && unselected.length > 0;\n    }\n    childItemsWithChildren.forEach((el) => {\n      const directChildItems = Array.from(el.querySelectorAll(\":scope > calcite-tree > calcite-tree-item\"));\n      updateItemState(directChildItems, el);\n    });\n    if (item.hasChildren) {\n      updateItemState(childItems, item);\n    }\n    else {\n      item.selected = futureSelected;\n      item.indeterminate = false;\n    }\n    ancestors.forEach((ancestor) => {\n      const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n      const activeDescendants = descendants.filter((el) => el.selected);\n      if (activeDescendants.length === 0) {\n        ancestor.selected = false;\n        ancestor.indeterminate = false;\n        return;\n      }\n      const indeterminate = activeDescendants.length < descendants.length;\n      ancestor.indeterminate = indeterminate;\n      ancestor.selected = !indeterminate;\n    });\n    this.selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    this.calciteTreeSelect.emit();\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  getRootTabIndex() {\n    return !this.child ? 0 : -1;\n  }\n  static get is() { return \"calcite-tree\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"tree.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"tree.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"lines\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Displays indentation guide lines.\"\n        },\n        \"attribute\": \"lines\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"child\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        },\n        \"attribute\": \"child\",\n        \"reflect\": true\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"selectionMode\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"SelectionMode\",\n          \"resolved\": \"\\\"ancestors\\\" | \\\"children\\\" | \\\"multichildren\\\" | \\\"multiple\\\" | \\\"none\\\" | \\\"single\\\" | \\\"single-persist\\\"\",\n          \"references\": {\n            \"SelectionMode\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"single\\\"\"\n            }],\n          \"text\": \"Customize how the component's selection works.\"\n        },\n        \"attribute\": \"selection-mode\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"single\\\"\"\n      },\n      \"selectedItems\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"HTMLCalciteTreeItemElement[]\",\n          \"resolved\": \"HTMLCalciteTreeItemElement[]\",\n          \"references\": {\n            \"HTMLCalciteTreeItemElement\": {\n              \"location\": \"global\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"readonly\",\n              \"text\": undefined\n            }],\n          \"text\": \"Specifies the component's selected items.\"\n        },\n        \"defaultValue\": \"[]\"\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteTreeSelect\",\n        \"name\": \"calciteTreeSelect\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the user selects/deselects `calcite-tree-items`.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get elementRef() { return \"el\"; }\n  static get listeners() {\n    return [{\n        \"name\": \"focus\",\n        \"method\": \"onFocus\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"focusin\",\n        \"method\": \"onFocusIn\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"focusout\",\n        \"method\": \"onFocusOut\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"calciteInternalTreeItemSelect\",\n        \"method\": \"onClick\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"keydown\",\n        \"method\": \"keyDownHandler\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\n"],"mappings":"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"}
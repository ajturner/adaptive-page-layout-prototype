{"version":3,"names":["CSS","container","controlSection","hexOptions","section","header","control","splitSection","colorModeContainer","colorMode","channels","channel","savedColors","savedColorsSection","saveColor","deleteColor","savedColorsButtons","headerHex","colorFieldAndSlider","colorFieldAndSliderInteractive","colorFieldAndSliderWrap","scope","hueScope","colorFieldScope","savedColor","DEFAULT_COLOR","Color","DEFAULT_STORAGE_KEY_PREFIX","RGB_LIMITS","r","g","b","HSV_LIMITS","h","s","v","DIMENSIONS","slider","height","width","colorField","thumb","radius","m","l","colorPickerCss","throttleFor60FpsInMs","defaultValue","normalizeHex","hex","defaultFormat","ColorPicker","constructor","hostRef","this","colorFieldAndSliderHovered","hueThumbState","internalColorUpdateContext","mode","CSSColorMode","HEX","shiftKeyChannelAdjustment","sliderThumbState","handleTabActivate","event","channelMode","currentTarget","getAttribute","updateChannelsFromColor","color","handleColorFieldScopeKeyDown","key","arrowKeyToXYOffset","ArrowUp","x","y","ArrowRight","ArrowDown","ArrowLeft","preventDefault","scopeOrientation","captureColorFieldColor","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","modifier","shiftKey","arrowKeyToXOffset","delta","hue","baseColorFieldColor","internalColorSet","handleHexInputChange","stopPropagation","allowEmpty","input","target","value","normalizedHex","handleSavedColorSelect","swatch","handleChannelInput","channelIndex","Number","limit","Object","keys","inputValue","clamped","clamp","toString","internalSyncChildElValue","handleChannelChange","shouldClearChannels","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldAndSliderPointerLeave","drawColorFieldAndSlider","handleColorFieldAndSliderPointerDown","isPrimaryPointerButton","offsetX","offsetY","region","getCanvasRegion","_a","colorFieldScopeNode","focus","captureHueSliderColor","_b","hueScopeNode","document","addEventListener","globalPointerMoveHandler","globalPointerUpHandler","once","activeColorFieldAndSliderRect","fieldAndSliderRenderingContext","canvas","getBoundingClientRect","previouslyDragging","calciteColorPickerChange","emit","el","dimensions","sliderThumbDragging","hueThumbDragging","isConnected","samplingX","samplingY","colorFieldAndSliderRect","clientX","clientY","colorFieldWidth","colorFieldHeight","hueSliderHeight","handleColorFieldAndSliderPointerEnterOrMove","prevHueThumbState","hsv","centerX","Math","round","saturationv","centerY","hoveringThumb","containsPoint","transitionedBetweenHoverAndIdle","sliderThumbColor","prevSliderThumbState","sliderThumbCenterX","sliderThumbCenterY","getSliderCapSpacing","hoveringSliderThumb","sliderThumbTransitionedBetweenHoverAndIdle","storeColorFieldScope","node","storeHueScope","renderChannelsTabTitle","activeChannelMode","messages","selected","label","rgb","class","onCalciteTabsActivate","renderChannelsTab","isRgb","channelLabels","channelAriaLabels","red","green","blue","saturation","direction","getElementDir","dir","map","index","renderChannel","ariaLabel","lang","effectiveLocale","numberButtonType","numberingSystem","onCalciteInputChange","onCalciteInputInput","onKeyDown","handleKeyDown","prefixText","scale","type","colorToDelete","inStorage","indexOf","filter","storageKey","storageId","localStorage","setItem","JSON","stringify","colorToSave","alreadySaved","throttle","drawColorField","drawHueSlider","skipEqual","initColorFieldAndSlider","getContext","updateCanvasSize","disabled","format","hideHex","hideChannels","hideSaved","undefined","messageOverrides","defaultMessages","toChannels","hueScopeLeft","hueScopeTop","handleColorChange","oldColor","previousColor","handleFormatChange","setMode","handleScaleChange","updateDimensions","onMessagesChange","handleValueChange","oldValue","checkMode","modeChanged","nextMode","parseMode","showIncompatibleColorWarning","dragging","calciteColorPickerInput","colorChanged","colorEqual","effectiveLocaleChange","updateMessages","handleChannelKeyUpOrDown","composedPath","some","classList","contains","complementaryBump","async","componentLoaded","setUpLoadableComponent","willSetNoColor","parsedMode","valueIsCompatible","initialColor","getItem","parse","setUpMessages","connectedCallback","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","removeEventListener","disconnectLocalized","disconnectMessages","componentDidRender","updateHostInteraction","render","selectedColorInHex","hexInputScale","sliderHeight","hueTop","hueLeft","noColor","vertical","onPointerDown","onPointerEnter","onPointerLeave","onPointerMove","ref","role","style","top","left","tabindex","hexLabel","onCalciteColorPickerHexInputChange","slot","saved","appearance","iconStart","kind","onClick","length","active","tabIndex","console","warn","context","toValue","hexMode","includes","replace","string","colorObject","object","endsWith","a","alpha","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","devicePixelRatio","window","testPointX","testPointY","boundsX","boundsY","boundsRadius","pow","hsvColor","requestAnimationFrame","drawThumb","state","startAngle","endAngle","PI","beginPath","arc","shadowBlur","shadowColor","fill","drawActiveHueSliderColor","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","array","floor","delegatesFocus","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/color-picker/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/color-picker/color-picker.css?tag=calcite-color-picker&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/color-picker/color-picker.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport Color from \"color\";\nexport const CSS = {\n  container: \"container\",\n  controlSection: \"control-section\",\n  hexOptions: \"color-hex-options\",\n  section: \"section\",\n  header: \"header\",\n  control: \"control\",\n  splitSection: \"section--split\",\n  colorModeContainer: \"color-mode-container\",\n  colorMode: \"color-mode\",\n  channels: \"channels\",\n  channel: \"channel\",\n  savedColors: \"saved-colors\",\n  savedColorsSection: \"saved-colors-section\",\n  saveColor: \"save-color\",\n  deleteColor: \"delete-color\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  headerHex: \"header--hex\",\n  colorFieldAndSlider: \"color-field-and-slider\",\n  colorFieldAndSliderInteractive: \"color-field-and-slider--interactive\",\n  colorFieldAndSliderWrap: \"color-field-and-slider-wrap\",\n  scope: \"scope\",\n  hueScope: \"scope--hue\",\n  colorFieldScope: \"scope--color-field\",\n  savedColor: \"saved-color\"\n};\nexport const DEFAULT_COLOR = Color(\"#007AC2\");\nexport const DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\nexport const RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255\n};\nexport const HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100\n};\nexport const DIMENSIONS = {\n  s: {\n    slider: {\n      height: 10,\n      width: 160\n    },\n    colorField: {\n      height: 80,\n      width: 160\n    },\n    thumb: {\n      radius: 8\n    }\n  },\n  m: {\n    slider: {\n      height: 14,\n      width: 272\n    },\n    colorField: {\n      height: 150,\n      width: 272\n    },\n    thumb: {\n      radius: 10\n    }\n  },\n  l: {\n    slider: {\n      height: 16,\n      width: 464\n    },\n    colorField: {\n      height: 200,\n      width: 464\n    },\n    thumb: {\n      radius: 12\n    }\n  }\n};\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]) {\n  pointer-events: none;\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n:host {\n  display: inline-block;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n  font-weight: var(--calcite-font-weight-normal);\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n:host([scale=s]) .container {\n  inline-size: 160px;\n}\n:host([scale=s]) .saved-colors {\n  grid-template-columns: repeat(auto-fill, minmax(20px, 1fr));\n}\n:host([scale=s]) .channels {\n  flex-direction: column;\n}\n:host([scale=s]) .channel {\n  inline-size: 100%;\n  margin-block-end: 4px;\n}\n:host([scale=s]) .channel:last-child {\n  margin-block-end: 0;\n}\n\n:host([scale=m]) .container {\n  inline-size: 272px;\n}\n\n:host([scale=l]) .header {\n  padding-block-end: 0px;\n}\n\n:host([scale=l]) {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n:host([scale=l]) .container {\n  inline-size: 464px;\n}\n:host([scale=l]) .color-field-and-slider {\n  margin-block-end: -20px;\n}\n:host([scale=l]) .section {\n  padding-block: 0 16px;\n  padding-inline: 16px;\n}\n:host([scale=l]) .section:first-of-type {\n  padding-block-start: 16px;\n}\n:host([scale=l]) .saved-colors {\n  grid-template-columns: repeat(auto-fill, minmax(28px, 1fr));\n  grid-gap: 12px;\n  padding-block-start: 16px;\n}\n:host([scale=l]) .control-section {\n  flex-wrap: nowrap;\n  align-items: baseline;\n}\n:host([scale=l]) .control-section > :nth-child(2) {\n  margin-inline-start: 12px;\n}\n:host([scale=l]) .color-hex-options {\n  display: flex;\n  flex-shrink: 1;\n  flex-direction: column;\n  justify-content: space-around;\n  min-block-size: 98px;\n  inline-size: 160px;\n}\n:host([scale=l]) .color-mode-container {\n  flex-shrink: 3;\n}\n\n.container {\n  background-color: var(--calcite-ui-foreground-1);\n  display: inline-block;\n  border: 1px solid var(--calcite-ui-border-1);\n}\n\n.color-field-and-slider-wrap {\n  position: relative;\n}\n\n.scope {\n  pointer-events: none;\n  position: absolute;\n  font-size: var(--calcite-font-size--1);\n  outline-color: transparent;\n  outline-offset: 14px;\n}\n.scope:focus {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 16px;\n}\n\n.color-field-and-slider {\n  margin-block-end: -16px;\n  touch-action: none;\n}\n.color-field-and-slider--interactive {\n  cursor: pointer;\n}\n\n.control-section {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.section {\n  padding-block: 0 12px;\n  padding-inline: 12px;\n}\n.section:first-of-type {\n  padding-block-start: 12px;\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-block-end: 0.25rem;\n  color: var(--calcite-ui-text-1);\n}\n\n.header--hex,\n.color-mode-container {\n  padding-block-start: 12px;\n}\n\n.channels {\n  display: flex;\n  justify-content: space-between;\n}\n\n.channel {\n  inline-size: 31%;\n}\n\n.saved-colors {\n  padding-block-start: 12px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(24px, 1fr));\n  grid-gap: 8px;\n  inline-size: 100%;\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  outline-offset: 0;\n  outline-color: transparent;\n  cursor: pointer;\n}\n.saved-color:focus {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 2px;\n}\n.saved-color:hover {\n  transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n  outline: 2px solid var(--calcite-ui-border-2);\n  outline-offset: 2px;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h } from \"@stencil/core\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport { getElementDir, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { CSS, DEFAULT_COLOR, DEFAULT_STORAGE_KEY_PREFIX, DIMENSIONS, HSV_LIMITS, RGB_LIMITS } from \"./resources\";\nimport { colorEqual, CSSColorMode, normalizeHex, parseMode } from \"./utils\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { componentLoaded, setComponentLoaded, setUpLoadableComponent } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { clamp } from \"../../utils/math\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nconst throttleFor60FpsInMs = 16;\nconst defaultValue = normalizeHex(DEFAULT_COLOR.hex());\nconst defaultFormat = \"auto\";\nexport class ColorPicker {\n  constructor() {\n    this.colorFieldAndSliderHovered = false;\n    this.hueThumbState = \"idle\";\n    this.internalColorUpdateContext = null;\n    this.mode = CSSColorMode.HEX;\n    this.shiftKeyChannelAdjustment = 0;\n    this.sliderThumbState = \"idle\";\n    this.handleTabActivate = (event) => {\n      this.channelMode = event.currentTarget.getAttribute(\"data-color-mode\");\n      this.updateChannelsFromColor(this.color);\n    };\n    this.handleColorFieldScopeKeyDown = (event) => {\n      const { key } = event;\n      const arrowKeyToXYOffset = {\n        ArrowUp: { x: 0, y: -10 },\n        ArrowRight: { x: 10, y: 0 },\n        ArrowDown: { x: 0, y: 10 },\n        ArrowLeft: { x: -10, y: 0 }\n      };\n      if (arrowKeyToXYOffset[key]) {\n        event.preventDefault();\n        this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n        this.captureColorFieldColor(this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0, this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0, false);\n      }\n    };\n    this.handleHueScopeKeyDown = (event) => {\n      const modifier = event.shiftKey ? 10 : 1;\n      const { key } = event;\n      const arrowKeyToXOffset = {\n        ArrowUp: 1,\n        ArrowRight: 1,\n        ArrowDown: -1,\n        ArrowLeft: -1\n      };\n      if (arrowKeyToXOffset[key]) {\n        event.preventDefault();\n        const delta = arrowKeyToXOffset[key] * modifier;\n        const hue = this.baseColorFieldColor.hue();\n        const color = this.baseColorFieldColor.hue(hue + delta);\n        this.internalColorSet(color, false);\n      }\n    };\n    this.handleHexInputChange = (event) => {\n      event.stopPropagation();\n      const { allowEmpty, color } = this;\n      const input = event.target;\n      const hex = input.value;\n      if (allowEmpty && !hex) {\n        this.internalColorSet(null);\n        return;\n      }\n      const normalizedHex = color && normalizeHex(color.hex());\n      if (hex !== normalizedHex) {\n        this.internalColorSet(Color(hex));\n      }\n    };\n    this.handleSavedColorSelect = (event) => {\n      const swatch = event.currentTarget;\n      this.internalColorSet(Color(swatch.color));\n    };\n    this.handleChannelInput = (event) => {\n      const input = event.currentTarget;\n      const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n      const limit = this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n      let inputValue;\n      if (this.allowEmpty && !input.value) {\n        inputValue = \"\";\n      }\n      else {\n        const value = Number(input.value) + this.shiftKeyChannelAdjustment;\n        const clamped = clamp(value, 0, limit);\n        inputValue = clamped.toString();\n      }\n      input.value = inputValue;\n      // TODO: refactor calcite-input so we don't need to sync the internals\n      // https://github.com/Esri/calcite-components/issues/6100\n      input.internalSyncChildElValue();\n    };\n    this.handleChannelChange = (event) => {\n      const input = event.currentTarget;\n      const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n      const channels = [...this.channels];\n      const shouldClearChannels = this.allowEmpty && !input.value;\n      if (shouldClearChannels) {\n        this.channels = [null, null, null];\n        this.internalColorSet(null);\n        return;\n      }\n      channels[channelIndex] = Number(input.value);\n      this.updateColorFromChannels(channels);\n    };\n    this.handleSavedColorKeyDown = (event) => {\n      if (isActivationKey(event.key)) {\n        event.preventDefault();\n        this.handleSavedColorSelect(event);\n      }\n    };\n    this.handleColorFieldAndSliderPointerLeave = () => {\n      this.colorFieldAndSliderInteractive = false;\n      this.colorFieldAndSliderHovered = false;\n      if (this.sliderThumbState !== \"drag\" && this.hueThumbState !== \"drag\") {\n        this.hueThumbState = \"idle\";\n        this.sliderThumbState = \"idle\";\n        this.drawColorFieldAndSlider();\n      }\n    };\n    this.handleColorFieldAndSliderPointerDown = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const { offsetX, offsetY } = event;\n      const region = this.getCanvasRegion(offsetY);\n      if (region === \"color-field\") {\n        this.hueThumbState = \"drag\";\n        this.captureColorFieldColor(offsetX, offsetY);\n        this.colorFieldScopeNode?.focus();\n      }\n      else if (region === \"slider\") {\n        this.sliderThumbState = \"drag\";\n        this.captureHueSliderColor(offsetX);\n        this.hueScopeNode?.focus();\n      }\n      // prevent text selection outside of color field & slider area\n      event.preventDefault();\n      document.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n      document.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n      this.activeColorFieldAndSliderRect =\n        this.fieldAndSliderRenderingContext.canvas.getBoundingClientRect();\n    };\n    this.globalPointerUpHandler = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const previouslyDragging = this.sliderThumbState === \"drag\" || this.hueThumbState === \"drag\";\n      this.hueThumbState = \"idle\";\n      this.sliderThumbState = \"idle\";\n      this.activeColorFieldAndSliderRect = null;\n      this.drawColorFieldAndSlider();\n      if (previouslyDragging) {\n        this.calciteColorPickerChange.emit();\n      }\n    };\n    this.globalPointerMoveHandler = (event) => {\n      const { el, dimensions } = this;\n      const sliderThumbDragging = this.sliderThumbState === \"drag\";\n      const hueThumbDragging = this.hueThumbState === \"drag\";\n      if (!el.isConnected || (!sliderThumbDragging && !hueThumbDragging)) {\n        return;\n      }\n      let samplingX;\n      let samplingY;\n      const colorFieldAndSliderRect = this.activeColorFieldAndSliderRect;\n      const { clientX, clientY } = event;\n      if (this.colorFieldAndSliderHovered) {\n        samplingX = clientX - colorFieldAndSliderRect.x;\n        samplingY = clientY - colorFieldAndSliderRect.y;\n      }\n      else {\n        const colorFieldWidth = dimensions.colorField.width;\n        const colorFieldHeight = dimensions.colorField.height;\n        const hueSliderHeight = dimensions.slider.height;\n        if (clientX < colorFieldAndSliderRect.x + colorFieldWidth &&\n          clientX > colorFieldAndSliderRect.x) {\n          samplingX = clientX - colorFieldAndSliderRect.x;\n        }\n        else if (clientX < colorFieldAndSliderRect.x) {\n          samplingX = 0;\n        }\n        else {\n          samplingX = colorFieldWidth - 1;\n        }\n        if (clientY < colorFieldAndSliderRect.y + colorFieldHeight + hueSliderHeight &&\n          clientY > colorFieldAndSliderRect.y) {\n          samplingY = clientY - colorFieldAndSliderRect.y;\n        }\n        else if (clientY < colorFieldAndSliderRect.y) {\n          samplingY = 0;\n        }\n        else {\n          samplingY = colorFieldHeight + hueSliderHeight;\n        }\n      }\n      if (hueThumbDragging) {\n        this.captureColorFieldColor(samplingX, samplingY, false);\n      }\n      else {\n        this.captureHueSliderColor(samplingX);\n      }\n    };\n    this.handleColorFieldAndSliderPointerEnterOrMove = ({ offsetX, offsetY }) => {\n      const { dimensions: { colorField, slider, thumb } } = this;\n      this.colorFieldAndSliderInteractive = offsetY <= colorField.height + slider.height;\n      this.colorFieldAndSliderHovered = true;\n      const region = this.getCanvasRegion(offsetY);\n      if (region === \"color-field\") {\n        const prevHueThumbState = this.hueThumbState;\n        const color = this.baseColorFieldColor.hsv();\n        const centerX = Math.round(color.saturationv() / (HSV_LIMITS.s / colorField.width));\n        const centerY = Math.round(colorField.height - color.value() / (HSV_LIMITS.v / colorField.height));\n        const hoveringThumb = this.containsPoint(offsetX, offsetY, centerX, centerY, thumb.radius);\n        let transitionedBetweenHoverAndIdle = false;\n        if (prevHueThumbState === \"idle\" && hoveringThumb) {\n          this.hueThumbState = \"hover\";\n          transitionedBetweenHoverAndIdle = true;\n        }\n        else if (prevHueThumbState === \"hover\" && !hoveringThumb) {\n          this.hueThumbState = \"idle\";\n          transitionedBetweenHoverAndIdle = true;\n        }\n        if (this.hueThumbState !== \"drag\") {\n          if (transitionedBetweenHoverAndIdle) {\n            // refresh since we won't update color and thus no redraw\n            this.drawColorFieldAndSlider();\n          }\n        }\n      }\n      else if (region === \"slider\") {\n        const sliderThumbColor = this.baseColorFieldColor.hsv().saturationv(100).value(100);\n        const prevSliderThumbState = this.sliderThumbState;\n        const sliderThumbCenterX = Math.round(sliderThumbColor.hue() / (360 / slider.width));\n        const sliderThumbCenterY = Math.round((slider.height + this.getSliderCapSpacing()) / 2) + colorField.height;\n        const hoveringSliderThumb = this.containsPoint(offsetX, offsetY, sliderThumbCenterX, sliderThumbCenterY, thumb.radius);\n        let sliderThumbTransitionedBetweenHoverAndIdle = false;\n        if (prevSliderThumbState === \"idle\" && hoveringSliderThumb) {\n          this.sliderThumbState = \"hover\";\n          sliderThumbTransitionedBetweenHoverAndIdle = true;\n        }\n        else if (prevSliderThumbState === \"hover\" && !hoveringSliderThumb) {\n          this.sliderThumbState = \"idle\";\n          sliderThumbTransitionedBetweenHoverAndIdle = true;\n        }\n        if (this.sliderThumbState !== \"drag\") {\n          if (sliderThumbTransitionedBetweenHoverAndIdle) {\n            // refresh since we won't update color and thus no redraw\n            this.drawColorFieldAndSlider();\n          }\n        }\n      }\n    };\n    this.storeColorFieldScope = (node) => {\n      this.colorFieldScopeNode = node;\n    };\n    this.storeHueScope = (node) => {\n      this.hueScopeNode = node;\n    };\n    this.renderChannelsTabTitle = (channelMode) => {\n      const { channelMode: activeChannelMode, messages } = this;\n      const selected = channelMode === activeChannelMode;\n      const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n      return (h(\"calcite-tab-title\", { class: CSS.colorMode, \"data-color-mode\": channelMode, key: channelMode, onCalciteTabsActivate: this.handleTabActivate, selected: selected }, label));\n    };\n    this.renderChannelsTab = (channelMode) => {\n      const { channelMode: activeChannelMode, channels, messages } = this;\n      const selected = channelMode === activeChannelMode;\n      const isRgb = channelMode === \"rgb\";\n      const channelLabels = isRgb\n        ? [messages.r, messages.g, messages.b]\n        : [messages.h, messages.s, messages.v];\n      const channelAriaLabels = isRgb\n        ? [messages.red, messages.green, messages.blue]\n        : [messages.hue, messages.saturation, messages.value];\n      const direction = getElementDir(this.el);\n      return (h(\"calcite-tab\", { class: CSS.control, key: channelMode, selected: selected }, h(\"div\", { class: CSS.channels, dir: \"ltr\" }, channels.map((channel, index) => \n      /* the channel container is ltr, so we apply the host's direction */\n      this.renderChannel(channel, index, channelLabels[index], channelAriaLabels[index], direction)))));\n    };\n    this.renderChannel = (value, index, label, ariaLabel, direction) => (h(\"calcite-input\", { class: CSS.channel, \"data-channel-index\": index, dir: direction, label: ariaLabel, lang: this.effectiveLocale, numberButtonType: \"none\", numberingSystem: this.numberingSystem, onCalciteInputChange: this.handleChannelChange, onCalciteInputInput: this.handleChannelInput, onKeyDown: this.handleKeyDown, prefixText: label, scale: this.scale === \"l\" ? \"m\" : \"s\", type: \"number\", value: value?.toString() }));\n    this.deleteColor = () => {\n      const colorToDelete = this.color.hex();\n      const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n      if (!inStorage) {\n        return;\n      }\n      const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n      this.savedColors = savedColors;\n      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n      if (this.storageId) {\n        localStorage.setItem(storageKey, JSON.stringify(savedColors));\n      }\n    };\n    this.saveColor = () => {\n      const colorToSave = this.color.hex();\n      const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n      if (alreadySaved) {\n        return;\n      }\n      const savedColors = [...this.savedColors, colorToSave];\n      this.savedColors = savedColors;\n      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n      if (this.storageId) {\n        localStorage.setItem(storageKey, JSON.stringify(savedColors));\n      }\n    };\n    this.drawColorFieldAndSlider = throttle(() => {\n      if (!this.fieldAndSliderRenderingContext) {\n        return;\n      }\n      this.drawColorField();\n      this.drawHueSlider();\n    }, throttleFor60FpsInMs);\n    this.captureColorFieldColor = (x, y, skipEqual = true) => {\n      const { dimensions: { colorField: { height, width } } } = this;\n      const saturation = Math.round((HSV_LIMITS.s / width) * x);\n      const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n      this.internalColorSet(this.baseColorFieldColor.hsv().saturationv(saturation).value(value), skipEqual);\n    };\n    this.initColorFieldAndSlider = (canvas) => {\n      this.fieldAndSliderRenderingContext = canvas.getContext(\"2d\");\n      this.updateCanvasSize(canvas);\n    };\n    this.allowEmpty = false;\n    this.color = DEFAULT_COLOR;\n    this.disabled = false;\n    this.format = defaultFormat;\n    this.hideHex = false;\n    this.hideChannels = false;\n    this.hideSaved = false;\n    this.scale = \"m\";\n    this.storageId = undefined;\n    this.messageOverrides = undefined;\n    this.numberingSystem = undefined;\n    this.value = defaultValue;\n    this.defaultMessages = undefined;\n    this.colorFieldAndSliderInteractive = false;\n    this.channelMode = \"rgb\";\n    this.channels = this.toChannels(DEFAULT_COLOR);\n    this.dimensions = DIMENSIONS.m;\n    this.effectiveLocale = \"\";\n    this.messages = undefined;\n    this.savedColors = [];\n    this.colorFieldScopeTop = undefined;\n    this.colorFieldScopeLeft = undefined;\n    this.scopeOrientation = undefined;\n    this.hueScopeLeft = undefined;\n    this.hueScopeTop = undefined;\n  }\n  handleColorChange(color, oldColor) {\n    this.drawColorFieldAndSlider();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n  handleFormatChange(format) {\n    this.setMode(format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n  handleScaleChange(scale = \"m\") {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(this.fieldAndSliderRenderingContext?.canvas);\n  }\n  onMessagesChange() {\n    /* wired up by t9n util */\n  }\n  handleValueChange(value, oldValue) {\n    const { allowEmpty, format } = this;\n    const checkMode = !allowEmpty || value;\n    let modeChanged = false;\n    if (checkMode) {\n      const nextMode = parseMode(value);\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode);\n    }\n    const dragging = this.sliderThumbState === \"drag\" || this.hueThumbState === \"drag\";\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n    const color = allowEmpty && !value ? null : Color(value);\n    const colorChanged = !colorEqual(color, this.color);\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(color, true, \"internal\");\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n  get baseColorFieldColor() {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  // using @Listen as a workaround for VDOM listener not firing\n  handleChannelKeyUpOrDown(event) {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n    if ((key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node) => node.classList?.contains(CSS.channel))) {\n      return;\n    }\n    const { shiftKey } = event;\n    event.preventDefault();\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component's first focusable element. */\n  async setFocus() {\n    await componentLoaded(this);\n    this.el.focus();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  async componentWillLoad() {\n    setUpLoadableComponent(this);\n    const { allowEmpty, color, format, value } = this;\n    const willSetNoColor = allowEmpty && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible = willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format);\n    this.internalColorSet(initialColor, false, \"initial\");\n    this.updateDimensions(this.scale);\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n    await setUpMessages(this);\n  }\n  connectedCallback() {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n  }\n  disconnectedCallback() {\n    document.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    document.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  render() {\n    const { allowEmpty, color, messages, hideHex, hideChannels, hideSaved, savedColors, scale } = this;\n    const selectedColorInHex = color ? color.hex() : null;\n    const hexInputScale = scale === \"l\" ? \"m\" : \"s\";\n    const { colorFieldAndSliderInteractive, colorFieldScopeTop, colorFieldScopeLeft, hueScopeLeft, hueScopeTop, scopeOrientation, dimensions: { colorField: { height: colorFieldHeight, width: colorFieldWidth }, slider: { height: sliderHeight } } } = this;\n    const hueTop = hueScopeTop ?? sliderHeight / 2 + colorFieldHeight;\n    const hueLeft = hueScopeLeft ?? (colorFieldWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    return (h(\"div\", { class: CSS.container }, h(\"div\", { class: CSS.colorFieldAndSliderWrap }, h(\"canvas\", { class: {\n        [CSS.colorFieldAndSlider]: true,\n        [CSS.colorFieldAndSliderInteractive]: colorFieldAndSliderInteractive\n      }, onPointerDown: this.handleColorFieldAndSliderPointerDown, onPointerEnter: this.handleColorFieldAndSliderPointerEnterOrMove, onPointerLeave: this.handleColorFieldAndSliderPointerLeave, onPointerMove: this.handleColorFieldAndSliderPointerEnterOrMove,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.initColorFieldAndSlider }), h(\"div\", { \"aria-label\": vertical ? messages.value : messages.saturation, \"aria-valuemax\": vertical ? HSV_LIMITS.v : HSV_LIMITS.s, \"aria-valuemin\": \"0\", \"aria-valuenow\": (vertical ? color?.saturationv() : color?.value()) || \"0\", class: { [CSS.scope]: true, [CSS.colorFieldScope]: true }, onKeyDown: this.handleColorFieldScopeKeyDown, role: \"slider\", style: { top: `${colorFieldScopeTop || 0}px`, left: `${colorFieldScopeLeft || 0}px` }, tabindex: \"0\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.storeColorFieldScope }), h(\"div\", { \"aria-label\": messages.hue, \"aria-valuemax\": HSV_LIMITS.h, \"aria-valuemin\": \"0\", \"aria-valuenow\": color?.round().hue() || DEFAULT_COLOR.round().hue(), class: { [CSS.scope]: true, [CSS.hueScope]: true }, onKeyDown: this.handleHueScopeKeyDown, role: \"slider\", style: { top: `${hueTop}px`, left: `${hueLeft}px` }, tabindex: \"0\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.storeHueScope })), hideHex && hideChannels ? null : (h(\"div\", { class: {\n        [CSS.controlSection]: true,\n        [CSS.section]: true\n      } }, hideHex ? null : (h(\"div\", { class: CSS.hexOptions }, h(\"span\", { class: {\n        [CSS.header]: true,\n        [CSS.headerHex]: true\n      } }, messages.hex), h(\"calcite-color-picker-hex-input\", { allowEmpty: allowEmpty, class: CSS.control, hexLabel: messages.hex, numberingSystem: this.numberingSystem, onCalciteColorPickerHexInputChange: this.handleHexInputChange, scale: hexInputScale, value: selectedColorInHex }))), hideChannels ? null : (h(\"calcite-tabs\", { class: {\n        [CSS.colorModeContainer]: true,\n        [CSS.splitSection]: true\n      }, scale: hexInputScale }, h(\"calcite-tab-nav\", { slot: \"title-group\" }, this.renderChannelsTabTitle(\"rgb\"), this.renderChannelsTabTitle(\"hsv\")), this.renderChannelsTab(\"rgb\"), this.renderChannelsTab(\"hsv\"))))), hideSaved ? null : (h(\"div\", { class: { [CSS.savedColorsSection]: true, [CSS.section]: true } }, h(\"div\", { class: CSS.header }, h(\"label\", null, messages.saved), h(\"div\", { class: CSS.savedColorsButtons }, h(\"calcite-button\", { appearance: \"transparent\", class: CSS.deleteColor, disabled: noColor, iconStart: \"minus\", kind: \"neutral\", label: messages.deleteColor, onClick: this.deleteColor, scale: hexInputScale, type: \"button\" }), h(\"calcite-button\", { appearance: \"transparent\", class: CSS.saveColor, disabled: noColor, iconStart: \"plus\", kind: \"neutral\", label: messages.saveColor, onClick: this.saveColor, scale: hexInputScale, type: \"button\" }))), savedColors.length > 0 ? (h(\"div\", { class: CSS.savedColors }, [\n      ...savedColors.map((color) => (h(\"calcite-color-picker-swatch\", { active: selectedColorInHex === color, class: CSS.savedColor, color: color, key: color, onClick: this.handleSavedColorSelect, onKeyDown: this.handleSavedColorKeyDown, scale: scale, tabIndex: 0 })))\n    ])) : null))));\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n  showIncompatibleColorWarning(value, format) {\n    console.warn(`ignoring color value (${value}) as it is not compatible with the current format (${format})`);\n  }\n  setMode(format) {\n    this.mode = format === \"auto\" ? this.mode : format;\n  }\n  captureHueSliderColor(x) {\n    const { dimensions: { slider: { width } } } = this;\n    const hue = (360 / width) * x;\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n  getCanvasRegion(y) {\n    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height: sliderHeight } } } = this;\n    if (y <= colorFieldHeight) {\n      return \"color-field\";\n    }\n    if (y <= colorFieldHeight + sliderHeight) {\n      return \"slider\";\n    }\n    return \"none\";\n  }\n  internalColorSet(color, skipEqual = true, context = \"user-interaction\") {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n  toValue(color, format = this.mode) {\n    if (!color) {\n      return null;\n    }\n    const hexMode = \"hex\";\n    if (format.includes(hexMode)) {\n      return normalizeHex(color.round()[hexMode]());\n    }\n    if (format.includes(\"-css\")) {\n      return color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n    }\n    const colorObject = color[format]().round().object();\n    if (format.endsWith(\"a\")) {\n      // normalize alpha prop\n      colorObject.a = colorObject.alpha;\n      delete colorObject.alpha;\n    }\n    return colorObject;\n  }\n  getSliderCapSpacing() {\n    const { dimensions: { slider: { height }, thumb: { radius } } } = this;\n    return radius * 2 - height;\n  }\n  updateDimensions(scale = \"m\") {\n    this.dimensions = DIMENSIONS[scale];\n  }\n  drawColorField() {\n    const context = this.fieldAndSliderRenderingContext;\n    const { dimensions: { colorField: { height, width } } } = this;\n    context.fillStyle = this.baseColorFieldColor.hsv().saturationv(100).value(100).string();\n    context.fillRect(0, 0, width, height);\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n    this.drawActiveColorFieldColor();\n  }\n  setCanvasContextSize(canvas, { height, width }) {\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n  updateCanvasSize(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.setCanvasContextSize(canvas, {\n      width: this.dimensions.colorField.width,\n      height: this.dimensions.colorField.height +\n        this.dimensions.slider.height +\n        this.getSliderCapSpacing() * 2\n    });\n    this.drawColorFieldAndSlider();\n  }\n  containsPoint(testPointX, testPointY, boundsX, boundsY, boundsRadius) {\n    return (Math.pow(testPointX - boundsX, 2) + Math.pow(testPointY - boundsY, 2) <=\n      Math.pow(boundsRadius, 2));\n  }\n  drawActiveColorFieldColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv();\n    const { dimensions: { colorField: { height, width }, thumb: { radius } } } = this;\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n    this.drawThumb(this.fieldAndSliderRenderingContext, radius, x, y, hsvColor, this.hueThumbState);\n  }\n  drawThumb(context, radius, x, y, color, state) {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.shadowBlur = state === \"hover\" ? 32 : 16;\n    context.shadowColor = `rgba(0, 0, 0, ${state === \"drag\" ? 0.32 : 0.16})`;\n    context.fillStyle = \"#fff\";\n    context.fill();\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    context.shadowBlur = 0;\n    context.shadowColor = \"transparent\";\n    context.fillStyle = color.rgb().string();\n    context.fill();\n  }\n  drawActiveHueSliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv().saturationv(100).value(100);\n    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height, width }, thumb: { radius } } } = this;\n    const x = hsvColor.hue() / (360 / width);\n    const y = height / 2 + colorFieldHeight;\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = x;\n      this.hueScopeTop = y;\n    });\n    this.drawThumb(this.fieldAndSliderRenderingContext, radius, x, y, hsvColor, this.sliderThumbState);\n  }\n  drawHueSlider() {\n    const context = this.fieldAndSliderRenderingContext;\n    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height, width } } } = this;\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n    const hueSliderColorStopKeywords = [\"red\", \"yellow\", \"lime\", \"cyan\", \"blue\", \"magenta\", \"red\"];\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n    context.fillStyle = gradient;\n    context.clearRect(0, colorFieldHeight, width, height + this.getSliderCapSpacing() * 2);\n    context.fillRect(0, colorFieldHeight, width, height);\n    this.drawActiveHueSliderColor();\n  }\n  updateColorFromChannels(channels) {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n  updateChannelsFromColor(color) {\n    this.channels = color ? this.toChannels(color) : [null, null, null];\n  }\n  toChannels(color) {\n    const { channelMode } = this;\n    return color[channelMode]()\n      .array()\n      .map((value) => Math.floor(value));\n  }\n  static get is() { return \"calcite-color-picker\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get delegatesFocus() { return true; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"color-picker.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"color-picker.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"allowEmpty\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `false`, an empty color (`null`) will be allowed as a `value`. Otherwise, a color value is enforced on the component.\\n\\nWhen `true`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`. When `false`, an empty color (`null`) will be allowed as a `value`.\"\n        },\n        \"attribute\": \"allow-empty\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"color\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"InternalColor | null\",\n          \"resolved\": \"Color<ColorParam>\",\n          \"references\": {\n            \"InternalColor\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Internal prop for advanced use-cases.\"\n        },\n        \"defaultValue\": \"DEFAULT_COLOR\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"format\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Format\",\n          \"resolved\": \"\\\"auto\\\" | \\\"hex\\\" | \\\"hexa\\\" | \\\"hsl\\\" | \\\"hsl-css\\\" | \\\"hsla\\\" | \\\"hsla-css\\\" | \\\"hsv\\\" | \\\"hsva\\\" | \\\"rgb\\\" | \\\"rgb-css\\\" | \\\"rgba\\\" | \\\"rgba-css\\\"\",\n          \"references\": {\n            \"Format\": {\n              \"location\": \"import\",\n              \"path\": \"./utils\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"auto\\\"\"\n            }],\n          \"text\": \"The format of `value`.\\n\\nWhen `\\\"auto\\\"`, the format will be inferred from `value` when set.\"\n        },\n        \"attribute\": \"format\",\n        \"reflect\": true,\n        \"defaultValue\": \"defaultFormat\"\n      },\n      \"hideHex\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, hides the Hex input.\"\n        },\n        \"attribute\": \"hide-hex\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"hideChannels\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, hides the RGB/HSV channel inputs.\"\n        },\n        \"attribute\": \"hide-channels\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"hideSaved\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, hides the saved colors section.\"\n        },\n        \"attribute\": \"hide-saved\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"storageId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the storage ID for colors.\"\n        },\n        \"attribute\": \"storage-id\",\n        \"reflect\": true\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<ColorPickerMessages>\",\n          \"resolved\": \"{ b?: string; blue?: string; deleteColor?: string; g?: string; green?: string; h?: string; hsv?: string; hex?: string; hue?: string; noColor?: string; opacity?: string; r?: string; red?: string; rgb?: string; s?: string; saturation?: string; saveColor?: string; saved?: string; v?: string; value?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"ColorPickerMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/color-picker/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      },\n      \"numberingSystem\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"NumberingSystem\",\n          \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"bali\\\" | \\\"beng\\\" | \\\"deva\\\" | \\\"fullwide\\\" | \\\"gujr\\\" | \\\"guru\\\" | \\\"hanidec\\\" | \\\"khmr\\\" | \\\"knda\\\" | \\\"laoo\\\" | \\\"latn\\\" | \\\"limb\\\" | \\\"mlym\\\" | \\\"mong\\\" | \\\"mymr\\\" | \\\"orya\\\" | \\\"tamldec\\\" | \\\"telu\\\" | \\\"thai\\\" | \\\"tibt\\\"\",\n          \"references\": {\n            \"NumberingSystem\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/locale\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n        },\n        \"attribute\": \"numbering-system\",\n        \"reflect\": true\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"ColorValue | null\",\n          \"resolved\": \"HSL | HSL & ObjectWithAlpha | HSV | HSV & ObjectWithAlpha | RGB | RGB & ObjectWithAlpha | string\",\n          \"references\": {\n            \"ColorValue\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"#007ac2\\\"\"\n            }, {\n              \"name\": \"see\",\n              \"text\": \"[CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\"\n            }, {\n              \"name\": \"see\",\n              \"text\": \"[ColorValue](https://github.com/Esri/calcite-components/blob/master/src/components/color-picker/interfaces.ts#L10)\"\n            }],\n          \"text\": \"The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\\n\\nThe type will be preserved as the color is updated.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false,\n        \"defaultValue\": \"defaultValue\"\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"ColorPickerMessages\",\n          \"resolved\": \"{ b: string; blue: string; deleteColor: string; g: string; green: string; h: string; hsv: string; hex: string; hue: string; noColor: string; opacity: string; r: string; red: string; rgb: string; s: string; saturation: string; saveColor: string; saved: string; v: string; value: string; }\",\n          \"references\": {\n            \"ColorPickerMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/color-picker/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"defaultMessages\": {},\n      \"colorFieldAndSliderInteractive\": {},\n      \"channelMode\": {},\n      \"channels\": {},\n      \"dimensions\": {},\n      \"effectiveLocale\": {},\n      \"savedColors\": {},\n      \"colorFieldScopeTop\": {},\n      \"colorFieldScopeLeft\": {},\n      \"scopeOrientation\": {},\n      \"hueScopeLeft\": {},\n      \"hueScopeTop\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteColorPickerChange\",\n        \"name\": \"calciteColorPickerChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the color value has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteColorPickerInput\",\n        \"name\": \"calciteColorPickerInput\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires as the color value changes.\\n\\nSimilar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component's first focusable element.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"color\",\n        \"methodName\": \"handleColorChange\"\n      }, {\n        \"propName\": \"format\",\n        \"methodName\": \"handleFormatChange\"\n      }, {\n        \"propName\": \"scale\",\n        \"methodName\": \"handleScaleChange\"\n      }, {\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"handleValueChange\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"keydown\",\n        \"method\": \"handleChannelKeyUpOrDown\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }, {\n        \"name\": \"keyup\",\n        \"method\": \"handleChannelKeyUpOrDown\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }];\n  }\n}\n"],"mappings":"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"}
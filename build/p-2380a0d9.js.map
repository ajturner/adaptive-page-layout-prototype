{"version":3,"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","rects","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","min","Math","max","within","min$1","value","max$1","arrow","arrowDimensions","getDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","center","offset","shouldAddOffset","alignmentOffset","centerOffset","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements","undefined","overflow","currentIndex","index","currentPlacement","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","v","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","flip","_middlewareData$flip","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","getComputedStyle","round","getCssDimensions","css","parseFloat","offsetWidth","offsetHeight","shouldFallback","fallback","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflowX","overflowY","display","test","isTableElement","isContainingBlock","isFirefox","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","contain","isClientRectVisualViewportBased","isLastTraversableNode","unwrapElement","FALLBACK_SCALE","domElement","getBoundingClientRect","Number","isFinite","includeScale","isFixedStrategy","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","visualViewport","offsetLeft","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","isOffsetParentAnElement","scroll","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","scrollableAncestor","isBody","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","mutableRect","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","position","currentNode","computedStyle","containingBlock","shouldIgnoreCurrentNode","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getTrueOffsetParent","polyfill","getContainingBlock","getRectRelativeToOffsetParent","getOffsetParentFn","getDimensionsFn","getClientRects","from","autoUpdate","update","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache","computePosition$1","configOverrides","globalThis","floatingUINonChromiumPositioningFix","floatingUIBrowserCheck","patchFloatingUiForNonChromiumBrowsers","getUAData","isChrome109OrAbove","find","ua","browser","parseInt","import","originalGetOffsetParent","placementDataAttribute","repositionDebounceTimeout","effectivePlacements","defaultMenuPlacement","FloatingCSS","animation","animationActive","getMiddleware","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","type","defaultMiddleware","filterComputedPlacements","filteredPlacements","console","warn","tagName","trim","getEffectivePlacement","floatingEl","getElementDir","reverse","reposition","component","delayed","open","debouncedReposition","positionFloatingUI","debounce","leading","maxWait","referenceEl","overlayPositioning","includeArrow","effectivePlacement","arrowX","arrowY","Object","assign","style","visibility","pointerEvents","setAttribute","cleanupMap","WeakMap","connectFloatingUI","disconnectFloatingUI","resetPosition","runAutoUpdate","getTransitionTarget","handleTransitionElTransitionEnd","cleanup","delete","visiblePointerSize","defaultOffsetDistance","ceil","hypot","updateAfterClose","shadowRoot","event","floatingTransitionEl","target","propertyName","classList","contains","getFloatingElFromTransitionTarget","closestElementCrossShadowBoundary"],"sources":["./node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","./node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","./node_modules/@esri/calcite-components/dist/collection/utils/config.js","./node_modules/@esri/calcite-components/dist/collection/utils/floating-ui.js"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = options || {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = options;\n      const {\n        rects\n      } = state;\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(state, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(state) : value;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(state) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const axis = getMainAxisFromPlacement(placement);\n      const isXAxis = axis === 'x';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isXAxis) {\n        availableWidth = min(\n        // Maximum clipping viewport width\n        width - overflow.right - overflow.left, overflowAvailableWidth);\n      } else {\n        availableHeight = min(\n        // Maximum clipping viewport height\n        height - overflow.bottom - overflow.top, overflowAvailableHeight);\n      }\n      if (!state.middlewareData.shift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isXAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldIgnoreCurrentNode = computedStyle.position === 'fixed';\n    if (shouldIgnoreCurrentNode) {\n      currentContainingBlockComputedStyle = null;\n    } else {\n      const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n      if (shouldDropCurrentNode) {\n        // Drop non-containing blocks.\n        result = result.filter(ancestor => ancestor !== currentNode);\n      } else {\n        // Record last containing block for next iteration.\n        currentContainingBlockComputedStyle = computedStyle;\n      }\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return getCssDimensions(element);\n  }\n  return element.getBoundingClientRect();\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\n/**\n * This module helps users provide custom configuration for component internals.\n *\n * @internal\n */\nconst configOverrides = globalThis[\"calciteComponentsConfig\"];\nconst config = {\n  /**\n   * We apply a custom fix to improve positioning for non-Chromium browsers.\n   * The fix comes at a performance cost, so provides users a way to opt-out if necessary.\n   *\n   * @internal\n   */\n  floatingUINonChromiumPositioningFix: true,\n  ...configOverrides\n};\nexport { config };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, offset, platform, shift } from \"@floating-ui/dom\";\nimport { Build } from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport { config } from \"./config\";\nimport { closestElementCrossShadowBoundary, getElementDir } from \"./dom\";\nconst floatingUIBrowserCheck = patchFloatingUiForNonChromiumBrowsers();\nasync function patchFloatingUiForNonChromiumBrowsers() {\n  function getUAData() {\n    return navigator.userAgentData;\n  }\n  function getUAString() {\n    const uaData = getUAData();\n    return uaData?.brands\n      ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n      : navigator.userAgent;\n  }\n  function isChrome109OrAbove() {\n    const uaData = getUAData();\n    if (uaData?.brands) {\n      return !!uaData.brands.find(({ brand, version }) => (brand === \"Google Chrome\" || brand === \"Chromium\") && Number(version) >= 109);\n    }\n    return !!navigator.userAgent.split(\" \").find((ua) => {\n      const [browser, version] = ua.split(\"/\");\n      return browser === \"Chrome\" && parseInt(version) >= 109;\n    });\n  }\n  if (Build.isBrowser &&\n    config.floatingUINonChromiumPositioningFix &&\n    // ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\n    (/firefox|safari/i.test(getUAString()) || isChrome109OrAbove())) {\n    const { offsetParent } = await import(\"./floating-ui/utils\");\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element) => originalGetOffsetParent(element, offsetParent);\n  }\n}\n/**\n * Exported for testing purposes only\n */\nexport const placementDataAttribute = \"data-placement\";\n/**\n * Exported for testing purposes only\n */\nexport const repositionDebounceTimeout = 100;\nexport const placements = [\n  // auto placements\n  \"auto\",\n  \"auto-start\",\n  \"auto-end\",\n  // placements\n  \"top\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right\",\n  \"right-start\",\n  \"right-end\",\n  \"left\",\n  \"left-start\",\n  \"left-end\",\n  // variation placements\n  \"leading-start\",\n  \"leading\",\n  \"leading-end\",\n  \"trailing-end\",\n  \"trailing\",\n  \"trailing-start\"\n];\nexport const effectivePlacements = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\"\n];\nexport const menuPlacements = [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"];\nexport const menuEffectivePlacements = [\n  \"top-start\",\n  \"top\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom\",\n  \"bottom-end\"\n];\nexport const flipPlacements = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\"\n];\nexport const defaultMenuPlacement = \"bottom-start\";\nexport const FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\"\n};\nfunction getMiddleware({ placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type }) {\n  const defaultMiddleware = [shift(), hide()];\n  if (type === \"menu\") {\n    return [\n      ...defaultMiddleware,\n      flip({\n        fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"]\n      })\n    ];\n  }\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware = [\n      ...defaultMiddleware,\n      offset({\n        mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n        crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0\n      })\n    ];\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }));\n    }\n    else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n    }\n    if (arrowEl) {\n      middleware.push(arrow({\n        element: arrowEl\n      }));\n    }\n    return middleware;\n  }\n  return [];\n}\nexport function filterComputedPlacements(placements, el) {\n  const filteredPlacements = placements.filter((placement) => effectivePlacements.includes(placement));\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(`${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${effectivePlacements\n      .map((placement) => `\"${placement}\"`)\n      .join(\", \")\n      .trim()}`, { el });\n  }\n  return filteredPlacements;\n}\nexport function getEffectivePlacement(floatingEl, placement) {\n  const placements = [\"left\", \"right\"];\n  if (getElementDir(floatingEl) === \"rtl\") {\n    placements.reverse();\n  }\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]);\n}\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component\n * @param options\n * @param options.referenceEl\n * @param options.floatingEl\n * @param options.overlayPositioning\n * @param options.placement\n * @param options.flipDisabled\n * @param options.flipPlacements\n * @param options.offsetDistance\n * @param options.offsetSkidding\n * @param options.arrowEl\n * @param options.type\n * @param delayed\n */\nexport async function reposition(component, options, delayed = false) {\n  if (!component.open) {\n    return;\n  }\n  return delayed ? debouncedReposition(options) : positionFloatingUI(options);\n}\nconst debouncedReposition = debounce(positionFloatingUI, repositionDebounceTimeout, {\n  leading: true,\n  maxWait: repositionDebounceTimeout\n});\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param root0.includeArrow\n */\nexport async function positionFloatingUI({ referenceEl, floatingEl, overlayPositioning = \"absolute\", placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, includeArrow = false, arrowEl, type }) {\n  if (!referenceEl || !floatingEl || (includeArrow && !arrowEl)) {\n    return null;\n  }\n  await floatingUIBrowserCheck;\n  const { x, y, placement: effectivePlacement, strategy: position, middlewareData } = await computePosition(referenceEl, floatingEl, {\n    strategy: overlayPositioning,\n    placement: placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n      ? undefined\n      : getEffectivePlacement(floatingEl, placement),\n    middleware: getMiddleware({\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type\n    })\n  });\n  if (middlewareData?.arrow) {\n    const { x: arrowX, y: arrowY } = middlewareData.arrow;\n    Object.assign(arrowEl.style, {\n      left: arrowX != null ? `${arrowX}px` : \"\",\n      top: arrowY != null ? `${arrowY}px` : \"\"\n    });\n  }\n  const referenceHidden = middlewareData?.hide?.referenceHidden;\n  const visibility = referenceHidden ? \"hidden\" : null;\n  const pointerEvents = visibility ? \"none\" : null;\n  floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n  const transform = `translate(${Math.round(x)}px,${Math.round(y)}px)`;\n  Object.assign(floatingEl.style, {\n    visibility,\n    pointerEvents,\n    position,\n    top: \"0\",\n    left: \"0\",\n    transform\n  });\n}\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const cleanupMap = new WeakMap();\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nexport function connectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n  const position = component.overlayPositioning;\n  // ensure position matches for initial positioning\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n    position\n  });\n  if (position === \"absolute\") {\n    resetPosition(floatingEl);\n  }\n  const runAutoUpdate = Build.isBrowser\n    ? autoUpdate\n    : (_refEl, _floatingEl, updateCallback) => {\n      updateCallback();\n      return () => {\n        /* noop */\n      };\n    };\n  cleanupMap.set(component, runAutoUpdate(referenceEl, floatingEl, () => component.reposition()));\n}\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nexport function disconnectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  getTransitionTarget(floatingEl).removeEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n  const cleanup = cleanupMap.get(component);\n  if (cleanup) {\n    cleanup();\n  }\n  cleanupMap.delete(component);\n}\nconst visiblePointerSize = 4;\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nexport const defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n/**\n * This utils applies floating element styles to avoid affecting layout when closed.\n *\n * This should be called when the closing transition will start.\n *\n * @param floatingEl\n */\nexport function updateAfterClose(floatingEl) {\n  if (!floatingEl || floatingEl.style.position !== \"absolute\") {\n    return;\n  }\n  getTransitionTarget(floatingEl).addEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n}\nfunction getTransitionTarget(floatingEl) {\n  // assumes floatingEl w/ shadowRoot is a FloatingUIComponent\n  return floatingEl.shadowRoot || floatingEl;\n}\nfunction handleTransitionElTransitionEnd(event) {\n  const floatingTransitionEl = event.target;\n  if (\n  // using any prop from floating-ui transition\n  event.propertyName === \"opacity\" &&\n    floatingTransitionEl.classList.contains(FloatingCSS.animation)) {\n    const floatingEl = getFloatingElFromTransitionTarget(floatingTransitionEl);\n    resetPosition(floatingEl);\n    getTransitionTarget(floatingEl).removeEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n  }\n}\nfunction resetPosition(floatingEl) {\n  // resets position to better match https://floating-ui.com/docs/computePosition#initial-layout\n  floatingEl.style.transform = \"\";\n  floatingEl.style.top = \"0\";\n  floatingEl.style.left = \"0\";\n}\nfunction getFloatingElFromTransitionTarget(floatingTransitionEl) {\n  return closestElementCrossShadowBoundary(floatingTransitionEl, `[${placementDataAttribute}]`);\n}\n"],"mappings":"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"}
{"version":3,"names":["CSS","scrim","content","scrimCss","Scrim","constructor","hostRef","this","loading","messages","undefined","messageOverrides","defaultMessages","effectiveLocale","onMessagesChange","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","async","setUpMessages","disconnectedCallback","disconnectLocalized","disconnectMessages","render","el","hasContent","innerHTML","trim","length","loaderNode","h","label","contentNode","class","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/scrim/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/scrim/scrim.css?tag=calcite-scrim&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/scrim/scrim.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nexport const CSS = {\n  scrim: \"scrim\",\n  content: \"content\"\n};\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-scrim-background: Specifies the background color of the scrim.\n*/\n:host {\n  position: absolute;\n  inset: 0px;\n  z-index: 700;\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    --tw-bg-opacity: 0;\n  }\n  100% {\n    --tw-text-opacity: 1;\n  }\n}\n.scrim {\n  position: absolute;\n  inset: 0px;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-scrim-background-internal));\n}\n\n.content {\n  padding: 1rem;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nimport { CSS } from \"./resources\";\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\nexport class Scrim {\n  constructor() {\n    this.loading = false;\n    this.messages = undefined;\n    this.messageOverrides = undefined;\n    this.defaultMessages = undefined;\n    this.effectiveLocale = \"\";\n  }\n  onMessagesChange() {\n    /* wired up by t9n util */\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n  async componentWillLoad() {\n    await setUpMessages(this);\n  }\n  disconnectedCallback() {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n  render() {\n    const { el, loading, messages } = this;\n    const hasContent = el.innerHTML.trim().length > 0;\n    const loaderNode = loading ? h(\"calcite-loader\", { label: messages.loading }) : null;\n    const contentNode = hasContent ? (h(\"div\", { class: CSS.content }, h(\"slot\", null))) : null;\n    return (h(\"div\", { class: CSS.scrim }, loaderNode, contentNode));\n  }\n  static get is() { return \"calcite-scrim\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"scrim.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"scrim.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"loading\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, a busy indicator is displayed.\"\n        },\n        \"attribute\": \"loading\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"ScrimMessages\",\n          \"resolved\": \"{ loading: string; }\",\n          \"references\": {\n            \"ScrimMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/scrim/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<ScrimMessages>\",\n          \"resolved\": \"{ loading?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"ScrimMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/scrim/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"defaultMessages\": {},\n      \"effectiveLocale\": {}\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n}\n"],"mappings":";;;;;GAKO,MAAMA,EAAM,CACjBC,MAAO,QACPC,QAAS,WCPX,MAAMC,EAAW,y2D,MCYJC,EAAK,MAChBC,YAAAC,G,UACEC,KAAKC,QAAU,MACfD,KAAKE,SAAWC,UAChBH,KAAKI,iBAAmBD,UACxBH,KAAKK,gBAAkBF,UACvBH,KAAKM,gBAAkB,E,CAEzBC,mB,CAGAC,wBACEC,EAAeT,KAAMA,KAAKM,gB,CAO5BI,oBACEC,EAAiBX,MACjBY,EAAgBZ,K,CAElBa,gCACQC,EAAcd,K,CAEtBe,uBACEC,EAAoBhB,MACpBiB,EAAmBjB,K,CAOrBkB,SACE,MAAMC,GAAEA,EAAElB,QAAEA,EAAOC,SAAEA,GAAaF,KAClC,MAAMoB,EAAaD,EAAGE,UAAUC,OAAOC,OAAS,EAChD,MAAMC,EAAavB,EAAUwB,EAAE,iBAAkB,CAAEC,MAAOxB,EAASD,UAAa,KAChF,MAAM0B,EAAcP,EAAcK,EAAE,MAAO,CAAEG,MAAOnC,EAAIE,SAAW8B,EAAE,OAAQ,OAAU,KACvF,OAAQA,EAAE,MAAO,CAAEG,MAAOnC,EAAIC,OAAS8B,EAAYG,E,CAc1CE,wBAAe,MAAO,CAAC,SAAU,C"}
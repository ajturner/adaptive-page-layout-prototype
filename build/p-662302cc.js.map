{"version":3,"names":["componentLangToMessageBundleCache","async","getMessageBundle","lang","component","key","fetch","getAssetPath","then","resp","ok","throwMessageFetchError","json","catch","Error","mergeMessages","messages","defaultMessages","messageOverrides","setUpMessages","fetchMessages","effectiveLocale","el","tag","tagName","toLowerCase","componentName","replace","getSupportedLocale","updateMessages","connectMessages","onMessagesChange","defaultOnMessagesChange","disconnectMessages","undefined","this"],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/t9n.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale } from \"./locale\";\nexport const componentLangToMessageBundleCache = {};\nasync function getMessageBundle(lang, component) {\n  const key = `${component}_${lang}`;\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n    if (!resp.ok) {\n      throwMessageFetchError();\n    }\n    return resp.json();\n  })\n    .catch(() => throwMessageFetchError());\n  return componentLangToMessageBundleCache[key];\n}\nfunction throwMessageFetchError() {\n  throw new Error(\"could not fetch component message bundle\");\n}\nfunction mergeMessages(component) {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides\n  };\n}\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component) {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\nasync function fetchMessages(component, lang) {\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component, lang) {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component) {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component) {\n  component.onMessagesChange = undefined;\n}\nfunction defaultOnMessagesChange() {\n  mergeMessages(this);\n}\n"],"mappings":";;;;;GAOO,MAAMA,EAAoC,GACjDC,eAAeC,EAAiBC,EAAMC,GACpC,MAAMC,EAAM,GAAGD,KAAaD,IAC5B,GAAIH,EAAkCK,GAAM,CAC1C,OAAOL,EAAkCK,EAC7C,CACEL,EAAkCK,GAAOC,MAAMC,EAAa,YAAYH,kBAA0BD,WAC/FK,MAAMC,IACP,IAAKA,EAAKC,GAAI,CACZC,GACN,CACI,OAAOF,EAAKG,MAAM,IAEjBC,OAAM,IAAMF,MACf,OAAOX,EAAkCK,EAC3C,CACA,SAASM,IACP,MAAM,IAAIG,MAAM,2CAClB,CACA,SAASC,EAAcX,GACrBA,EAAUY,SAAW,IAChBZ,EAAUa,mBACVb,EAAUc,iBAEjB,CAMOjB,eAAekB,EAAcf,GAClCA,EAAUa,sBAAwBG,EAAchB,EAAWA,EAAUiB,iBACrEN,EAAcX,EAChB,CACAH,eAAemB,EAAchB,EAAWD,GACtC,MAAMmB,GAAEA,GAAOlB,EACf,MAAMmB,EAAMD,EAAGE,QAAQC,cACvB,MAAMC,EAAgBH,EAAII,QAAQ,WAAY,IAC9C,OAAOzB,EAAiB0B,EAAmBzB,EAAM,OAAQuB,EAC3D,CAYOzB,eAAe4B,EAAezB,EAAWD,GAC9CC,EAAUa,sBAAwBG,EAAchB,EAAWD,GAC3DY,EAAcX,EAChB,CAUO,SAAS0B,EAAgB1B,GAC9BA,EAAU2B,iBAAmBC,CAC/B,CAQO,SAASC,EAAmB7B,GACjCA,EAAU2B,iBAAmBG,SAC/B,CACA,SAASF,IACPjB,EAAcoB,KAChB,Q"}
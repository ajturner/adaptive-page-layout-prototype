{"version":3,"names":["pickListItemCss","PickListItem","constructor","hostRef","this","pickListClickHandler","event","disabled","deselectDisabled","selected","nonInteractive","shiftPressed","shiftKey","pickListKeyDownHandler","key","preventDefault","removeClickHandler","calciteListItemRemove","emit","description","undefined","icon","iconFlipRtl","label","messageOverrides","messages","metadata","removable","value","defaultMessages","effectiveLocale","descriptionWatchHandler","calciteInternalListItemPropsChange","labelWatchHandler","onMessagesChange","metadataWatchHandler","selectedWatchHandler","calciteListItemChange","item","el","valueWatchHandler","newValue","oldValue","calciteInternalListItemValueChange","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","connectConditionalSlotComponent","async","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","componentDidRender","updateHostInteraction","closest","coerce","componentLoaded","_a","focusEl","focus","renderIcon","h","class","CSS","iconDot","ICON_TYPES","circle","onClick","square","flipRtl","ICONS","checked","scale","renderRemoveAction","remove","slot","SLOTS","actionsEnd","text","renderActionsStart","hasActionsStart","getSlotted","actionsStart","actions","name","renderActionsEnd","hasActionsEnd","render","Fragment","onKeyDown","tabIndex","ref","toAriaBoolean","textContainer","role","title","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/pick-list-item/pick-list-item.css?tag=calcite-pick-list-item&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/pick-list-item/pick-list-item.js"],"sourcesContent":["@charset \"UTF-8\";\n/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]){\n  pointer-events: none;\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n:host{\n  margin: 0px;\n  margin-block-end: 1px;\n  box-sizing: border-box;\n  display: flex;\n  align-items: stretch;\n  background-color: var(--calcite-ui-foreground-1);\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n  color: var(--calcite-ui-text-1);\n  --tw-shadow: 0 1px 0 var(--calcite-ui-border-3);\n  --tw-shadow-colored: 0 1px 0 var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n  transition: background-color var(--calcite-animation-timing);\n  animation: calcite-fade-in var(--calcite-animation-timing);\n}\n:host *{\n  box-sizing: border-box;\n}\n\n.label{\n  display: flex;\n  flex: 1 1 auto;\n  cursor: pointer;\n  align-items: center;\n  background-color: transparent;\n  outline-color: transparent;\n}\n.label:focus{\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: -2px;\n}\n.label:hover{\n  background-color: var(--calcite-ui-foreground-2);\n}\n\n:host([non-interactive]:hover){\n  background-color: var(--calcite-ui-foreground-1);\n}\n\n:host([non-interactive]) .label,\n:host([non-interactive]) .icon{\n  pointer-events: none;\n}\n\n.icon{\n  margin-block: 0px;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  padding: 0.25rem;\n  color: var(--calcite-ui-brand);\n  flex: 0 0 auto;\n  line-height: 0;\n}\n.icon:hover{\n  background-color: var(--calcite-ui-foreground-2);\n}\n\n.icon-dot{\n  display: flex;\n  inline-size: 1.5rem;\n  align-items: center;\n  padding: 0.5rem;\n}\n.icon-dot:before{\n  opacity: 0;\n  content: \"â€¢\";\n}\n\n.icon calcite-icon{\n  opacity: 0;\n}\n\n:host([selected]) .icon-dot:before,\n:host([selected]) .icon calcite-icon {\n  transition: opacity var(--calcite-animation-timing);\n  opacity: 1;\n}\n\n.text-container{\n  pointer-events: none;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  overflow: hidden;\n  padding-block: 0.5rem;\n  padding-inline: 0.75rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.title{\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-ui-text-1);\n}\n\n.description{\n  margin-block-start: 0.125rem;\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-ui-text-3);\n}\n\n.actions{\n  margin: 0px;\n  display: flex;\n  flex: 0 1 auto;\n  align-items: stretch;\n  justify-content: flex-end;\n}\n\n.actions--start ~ .label {\n  padding-inline-start: 0.25rem;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { Fragment, h } from \"@stencil/core\";\nimport { connectConditionalSlotComponent, disconnectConditionalSlotComponent } from \"../../utils/conditionalSlot\";\nimport { getSlotted, toAriaBoolean } from \"../../utils/dom\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nimport { componentLoaded, setComponentLoaded, setUpLoadableComponent } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nimport { ICON_TYPES } from \"../pick-list/resources\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n/**\n * @deprecated Use the `list` component instead.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component.\n */\nexport class PickListItem {\n  constructor() {\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.pickListClickHandler = (event) => {\n      if (this.disabled || (this.deselectDisabled && this.selected) || this.nonInteractive) {\n        return;\n      }\n      this.shiftPressed = event.shiftKey;\n      this.selected = !this.selected;\n    };\n    this.pickListKeyDownHandler = (event) => {\n      if (event.key === \" \") {\n        event.preventDefault();\n        if ((this.deselectDisabled && this.selected) || this.nonInteractive) {\n          return;\n        }\n        this.selected = !this.selected;\n      }\n    };\n    this.removeClickHandler = () => {\n      this.calciteListItemRemove.emit();\n    };\n    this.description = undefined;\n    this.disabled = false;\n    this.deselectDisabled = false;\n    this.nonInteractive = false;\n    this.icon = null;\n    this.iconFlipRtl = false;\n    this.label = undefined;\n    this.messageOverrides = undefined;\n    this.messages = undefined;\n    this.metadata = undefined;\n    this.removable = false;\n    this.selected = false;\n    this.value = undefined;\n    this.defaultMessages = undefined;\n    this.effectiveLocale = \"\";\n  }\n  descriptionWatchHandler() {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n  labelWatchHandler() {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n  onMessagesChange() {\n    /* wired up by t9n util */\n  }\n  metadataWatchHandler() {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n  selectedWatchHandler() {\n    this.calciteListItemChange.emit({\n      item: this.el,\n      value: this.value,\n      selected: this.selected,\n      shiftPressed: this.shiftPressed\n    });\n    this.shiftPressed = false;\n  }\n  valueWatchHandler(newValue, oldValue) {\n    this.calciteInternalListItemValueChange.emit({ oldValue, newValue });\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n  async componentWillLoad() {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n  }\n  disconnectedCallback() {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this, this.el.closest(\"calcite-pick-list\") ? \"managed\" : false);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * Toggles the selection state. By default this won't trigger an event.\n   * The first argument allows the value to be coerced, rather than swapping values.\n   *\n   * @param coerce\n   */\n  async toggleSelected(coerce) {\n    this.selected = typeof coerce === \"boolean\" ? coerce : !this.selected;\n  }\n  /** Sets focus on the component. */\n  async setFocus() {\n    await componentLoaded(this);\n    this.focusEl?.focus();\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderIcon() {\n    const { icon, iconFlipRtl } = this;\n    if (!icon) {\n      return null;\n    }\n    return (h(\"span\", { class: {\n        [CSS.icon]: true,\n        [CSS.iconDot]: icon === ICON_TYPES.circle\n      }, onClick: this.pickListClickHandler }, icon === ICON_TYPES.square ? (h(\"calcite-icon\", { flipRtl: iconFlipRtl, icon: ICONS.checked, scale: \"s\" })) : null));\n  }\n  renderRemoveAction() {\n    return this.removable ? (h(\"calcite-action\", { class: CSS.remove, icon: ICONS.remove, onClick: this.removeClickHandler, slot: SLOTS.actionsEnd, text: this.messages.remove })) : null;\n  }\n  renderActionsStart() {\n    const { el } = this;\n    const hasActionsStart = getSlotted(el, SLOTS.actionsStart);\n    return hasActionsStart ? (h(\"div\", { class: { [CSS.actions]: true, [CSS.actionsStart]: true } }, h(\"slot\", { name: SLOTS.actionsStart }))) : null;\n  }\n  renderActionsEnd() {\n    const { el, removable } = this;\n    const hasActionsEnd = getSlotted(el, SLOTS.actionsEnd);\n    return hasActionsEnd || removable ? (h(\"div\", { class: { [CSS.actions]: true, [CSS.actionsEnd]: true } }, h(\"slot\", { name: SLOTS.actionsEnd }), this.renderRemoveAction())) : null;\n  }\n  render() {\n    const { description, label } = this;\n    return (h(Fragment, null, this.renderIcon(), this.renderActionsStart(), h(\"label\", { \"aria-label\": label, class: CSS.label, onClick: this.pickListClickHandler, onKeyDown: this.pickListKeyDownHandler, tabIndex: 0,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (focusEl) => (this.focusEl = focusEl) }, h(\"div\", { \"aria-checked\": toAriaBoolean(this.selected), class: CSS.textContainer, role: \"menuitemcheckbox\" }, h(\"span\", { class: CSS.title }, label), description ? h(\"span\", { class: CSS.description }, description) : null)), this.renderActionsEnd()));\n  }\n  static get is() { return \"calcite-pick-list-item\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"pick-list-item.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"pick-list-item.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"description\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A description for the component that displays below the label text.\"\n        },\n        \"attribute\": \"description\",\n        \"reflect\": true\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"deselectDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `false`, the component cannot be deselected by user interaction.\"\n        },\n        \"attribute\": \"deselect-disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"nonInteractive\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        },\n        \"attribute\": \"non-interactive\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"icon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ICON_TYPES | null\",\n          \"resolved\": \"ICON_TYPES.circle | ICON_TYPES.grip | ICON_TYPES.square\",\n          \"references\": {\n            \"ICON_TYPES\": {\n              \"location\": \"import\",\n              \"path\": \"../pick-list/resources\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"see\",\n              \"text\": \"[ICON_TYPES](https://github.com/Esri/calcite-components/blob/master/src/components/pick-list/resources.ts#L5)\"\n            }],\n          \"text\": \"Determines the icon SVG symbol that will be shown. Options are `\\\"circle\\\"`, `\\\"square\\\"`, `\\\"grip\\\"` or `null`.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": true,\n        \"defaultValue\": \"null\"\n      },\n      \"iconFlipRtl\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n        },\n        \"attribute\": \"icon-flip-rtl\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"label\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Label and accessible name for the component. Appears next to the icon.\"\n        },\n        \"attribute\": \"label\",\n        \"reflect\": true\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<PickListItemMessages>\",\n          \"resolved\": \"{ remove?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"PickListItemMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/pick-list-item/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"PickListItemMessages\",\n          \"resolved\": \"{ remove: string; }\",\n          \"references\": {\n            \"PickListItemMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/pick-list-item/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      },\n      \"metadata\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Record<string, unknown>\",\n          \"resolved\": \"{ [x: string]: unknown; }\",\n          \"references\": {\n            \"Record\": {\n              \"location\": \"global\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Provides additional metadata to the component. Primary use is for a filter on the parent list.\"\n        }\n      },\n      \"removable\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, displays a remove action that removes the item from the list.\"\n        },\n        \"attribute\": \"removable\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"selected\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, selects an item. Toggles when an item is checked/unchecked.\"\n        },\n        \"attribute\": \"selected\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"value\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component's value.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"defaultMessages\": {},\n      \"effectiveLocale\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteListItemChange\",\n        \"name\": \"calciteListItemChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is selected or unselected.\"\n        },\n        \"complexType\": {\n          \"original\": \"{\\n    item: HTMLCalcitePickListItemElement;\\n    value: any;\\n    selected: boolean;\\n    shiftPressed: boolean;\\n  }\",\n          \"resolved\": \"{ item: HTMLCalcitePickListItemElement; value: any; selected: boolean; shiftPressed: boolean; }\",\n          \"references\": {\n            \"HTMLCalcitePickListItemElement\": {\n              \"location\": \"global\"\n            }\n          }\n        }\n      }, {\n        \"method\": \"calciteListItemRemove\",\n        \"name\": \"calciteListItemRemove\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the remove button is pressed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteInternalListItemPropsChange\",\n        \"name\": \"calciteInternalListItemPropsChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emits when the component's label, description, value, or metadata properties are modified.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteInternalListItemValueChange\",\n        \"name\": \"calciteInternalListItemValueChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emits when the component's value property is modified.\"\n        },\n        \"complexType\": {\n          \"original\": \"{\\n    oldValue: any;\\n    newValue: any;\\n  }\",\n          \"resolved\": \"{ oldValue: any; newValue: any; }\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"toggleSelected\": {\n        \"complexType\": {\n          \"signature\": \"(coerce?: boolean) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"coerce\"\n                }],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Toggles the selection state. By default this won't trigger an event.\\nThe first argument allows the value to be coerced, rather than swapping values.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"coerce\"\n            }]\n        }\n      },\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"description\",\n        \"methodName\": \"descriptionWatchHandler\"\n      }, {\n        \"propName\": \"label\",\n        \"methodName\": \"labelWatchHandler\"\n      }, {\n        \"propName\": \"defaultMessages\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"metadata\",\n        \"methodName\": \"metadataWatchHandler\"\n      }, {\n        \"propName\": \"selected\",\n        \"methodName\": \"selectedWatchHandler\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"valueWatchHandler\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n}\n"],"mappings":"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"}
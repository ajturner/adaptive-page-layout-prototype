{"version":3,"names":["StatusIconDefaults","inputMessageCss","InputMessage","constructor","hostRef","this","icon","undefined","iconFlipRtl","scale","status","handleIconEl","requestedIcon","setRequestedIcon","connectedCallback","getElementProp","el","render","hidden","h","Host","renderIcon","iconName","class","flipRtl"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/input-message/interfaces.js","./node_modules/@esri/calcite-components/dist/collection/components/input-message/input-message.css?tag=calcite-input-message&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/input-message/input-message.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nexport var StatusIconDefaults;\n(function (StatusIconDefaults) {\n  StatusIconDefaults[\"valid\"] = \"check-circle\";\n  StatusIconDefaults[\"invalid\"] = \"exclamation-mark-triangle\";\n  StatusIconDefaults[\"idle\"] = \"information\";\n})(StatusIconDefaults || (StatusIconDefaults = {}));\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n*/\n:host([scale=m]),\n:host([scale=l]) {\n  --calcite-input-message-spacing-value: 0.25rem;\n}\n\n:host {\n  visibility: hidden;\n  box-sizing: border-box;\n  display: flex;\n  block-size: 0px;\n  inline-size: 100%;\n  align-items: center;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-ui-text-1);\n  visibility: visible;\n  block-size: auto;\n  opacity: 1;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\n:host([scale=m]),\n:host([scale=l]) {\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  pointer-events: none;\n  display: inline-flex;\n  flex-shrink: 0;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  margin-inline-end: 0.5rem;\n}\n\n:host([status=invalid]) .calcite-input-message-icon {\n  color: var(--calcite-ui-danger);\n}\n\n:host([status=warning]) .calcite-input-message-icon {\n  color: var(--calcite-ui-warning);\n}\n\n:host([status=valid]) .calcite-input-message-icon {\n  color: var(--calcite-ui-success);\n}\n\n:host([status=idle]) .calcite-input-message-icon {\n  color: var(--calcite-ui-brand);\n}\n\n:host([status]) {\n  color: var(--calcite-ui-text-1);\n}\n\n:host([status][scale=s]) {\n  font-size: var(--calcite-font-size--3);\n  line-height: 0.75rem;\n}\n\n:host([status][scale=m]) {\n  margin-block-start: 0.25rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n}\n\n:host([status][scale=l]) {\n  margin-block-start: 0.25rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h, Host } from \"@stencil/core\";\nimport { getElementProp, setRequestedIcon } from \"../../utils/dom\";\nimport { StatusIconDefaults } from \"./interfaces\";\n/**\n * @slot - A slot for adding text.\n */\nexport class InputMessage {\n  constructor() {\n    this.icon = undefined;\n    this.iconFlipRtl = false;\n    this.scale = \"m\";\n    this.status = \"idle\";\n  }\n  handleIconEl() {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    this.scale = getElementProp(this.el, \"scale\", this.scale);\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n  render() {\n    const hidden = this.el.hidden;\n    return (h(Host, { \"calcite-hydrated-hidden\": hidden }, this.renderIcon(this.requestedIcon), h(\"slot\", null)));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  renderIcon(iconName) {\n    if (iconName) {\n      return (h(\"calcite-icon\", { class: \"calcite-input-message-icon\", flipRtl: this.iconFlipRtl, icon: iconName, scale: \"s\" }));\n    }\n  }\n  static get is() { return \"calcite-input-message\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"input-message.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"input-message.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"icon\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean | string\",\n          \"resolved\": \"boolean | string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies an icon to display.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": true\n      },\n      \"iconFlipRtl\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n        },\n        \"attribute\": \"icon-flip-rtl\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"status\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Status\",\n          \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n          \"references\": {\n            \"Status\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the status of the input field, which determines message and icons.\"\n        },\n        \"attribute\": \"status\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"idle\\\"\"\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"status\",\n        \"methodName\": \"handleIconEl\"\n      }, {\n        \"propName\": \"icon\",\n        \"methodName\": \"handleIconEl\"\n      }];\n  }\n}\n"],"mappings":";;;;;GAKO,IAAIA,GACX,SAAWA,GACTA,EAAmB,SAAW,eAC9BA,EAAmB,WAAa,4BAChCA,EAAmB,QAAU,aAC9B,EAJD,CAIGA,IAAuBA,EAAqB,KCV/C,MAAMC,EAAkB,8oF,MCWXC,EAAY,MACvBC,YAAAC,G,UACEC,KAAKC,KAAOC,UACZF,KAAKG,YAAc,MACnBH,KAAKI,MAAQ,IACbJ,KAAKK,OAAS,M,CAEhBC,eACEN,KAAKO,cAAgBC,EAAiBb,EAAoBK,KAAKC,KAAMD,KAAKK,O,CAO5EI,oBACET,KAAKI,MAAQM,EAAeV,KAAKW,GAAI,QAASX,KAAKI,OACnDJ,KAAKO,cAAgBC,EAAiBb,EAAoBK,KAAKC,KAAMD,KAAKK,O,CAE5EO,SACE,MAAMC,EAASb,KAAKW,GAAGE,OACvB,OAAQC,EAAEC,EAAM,CAAE,0BAA2BF,GAAUb,KAAKgB,WAAWhB,KAAKO,eAAgBO,EAAE,OAAQ,M,CAOxGE,WAAWC,GACT,GAAIA,EAAU,CACZ,OAAQH,EAAE,eAAgB,CAAEI,MAAO,6BAA8BC,QAASnB,KAAKG,YAAaF,KAAMgB,EAAUb,MAAO,K"}
{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","String","Number","arg","activeFocusTraps","activateTrap","trapStack","trap","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","isSelectableInput","node","tagName","toLowerCase","select","isEscapeEvent","e","keyCode","isTabEvent","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","findIndex","arr","idx","every","valueOrHandler","_len","params","Array","_key","getActualTarget","event","shadowRoot","composedPath","internalTrapStack","createFocusTrap","elements","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","element","_ref","container","tabbableNodes","contains","find","getNodeForOption","optionValue","_len2","_key2","Error","concat","querySelector","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbable","tabbableOptions","focusableNodes","focusable","lastTabbableNode","nextTabbableNode","forward","nodeIdx","n","slice","isTabbable","reverse","group","tryFocus","focus","preventScroll","getReturnFocusNode","previousActiveElement","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkKeyNav","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref2","isFocusable","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref3","_destinationGroupIndex","_destinationGroup","checkKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","this","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","options","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","updateContainerElements","containerElements","elementsAsArray","Boolean","connectFocusTrap","component","focusTrapEl","tabIndex","focusTrapOptions","ownerDocument","fallbackFocus","setReturnFocus","el","focusElement","focusTrap","activateFocusTrap","focusTrapDisabled","deactivateFocusTrap","updateFocusTrapElements"],"sources":["./node_modules/focus-trap/dist/focus-trap.esm.js","./node_modules/@esri/calcite-components/dist/collection/utils/focusTrapComponent.js"],"sourcesContent":["/*!\n* focus-trap 7.4.0\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, focusable, isTabbable, isFocusable } from 'tabbable';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) ||\n      // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          var nodeIdx = focusableNodes.findIndex(function (n) {\n            return n === node;\n          });\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n          if (forward) {\n            return focusableNodes.slice(nodeIdx + 1).find(function (n) {\n              return isTabbable(n, config.tabbableOptions);\n            });\n          }\n          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {\n            return isTabbable(n, config.tabbableOptions);\n          });\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === doc.activeElement) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = findContainerIndex(target) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var target = getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 ? void 0 : onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        onPostActivate === null || onPostActivate === void 0 ? void 0 : onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 ? void 0 : onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 ? void 0 : onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 ? void 0 : onPause();\n      removeListeners();\n      onPostPause === null || onPostPause === void 0 ? void 0 : onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 ? void 0 : onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      onPostUnpause === null || onPostUnpause === void 0 ? void 0 : onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { createFocusTrap } from \"focus-trap\";\nimport { focusElement, tabbableOptions } from \"./dom\";\nconst trapStack = [];\n/**\n * Helper to set up the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\nexport function connectFocusTrap(component) {\n  const { focusTrapEl } = component;\n  if (!focusTrapEl) {\n    return;\n  }\n  if (focusTrapEl.tabIndex == null) {\n    focusTrapEl.tabIndex = -1;\n  }\n  const focusTrapOptions = {\n    clickOutsideDeactivates: true,\n    document: focusTrapEl.ownerDocument,\n    escapeDeactivates: false,\n    fallbackFocus: focusTrapEl,\n    setReturnFocus: (el) => {\n      focusElement(el);\n      return false;\n    },\n    tabbableOptions,\n    trapStack\n  };\n  component.focusTrap = createFocusTrap(focusTrapEl, focusTrapOptions);\n}\n/**\n * Helper to activate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\nexport function activateFocusTrap(component) {\n  if (!component.focusTrapDisabled) {\n    component.focusTrap?.activate();\n  }\n}\n/**\n * Helper to deactivate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\nexport function deactivateFocusTrap(component) {\n  component.focusTrap?.deactivate();\n}\n/**\n * Helper to update the element(s) that are used within the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @example\n * const modal = document.querySelector(\"calcite-modal\");\n * const input = document.createElement(\"calcite-input\");\n * content.appendChild(input);\n * await input.componentOnReady();\n * await modal.updateFocusTrapElements();\n * requestAnimationFrame(() => input.setFocus());\n */\nexport function updateFocusTrapElements(component) {\n  component.focusTrap?.updateContainerElements(component.focusTrapEl);\n}\n"],"mappings":"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"}